{
  "hash": "3e14c535bd4e19f9024d0e8d7138bf50",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'ETC5513: Collaborative and Reproducible Practices'\nsubtitle: \"Tutorial 11\"\nauthor: \"Michael Lydeamore\"\ndate: today\nformat:\n    unilur-html:\n        output-file: index.html\n        embed-resources: true\n    unilur-html+solution:\n        output-file: solution.html\n        embed-resources: true\n---\n\n::: {.cell}\n\n:::\n\n\n\n## `git` scavanger hunt\n\nToday, we will do the git scavenger hunt.\n\nFollow the instructions at <https://github.com/KrisanatA/hacky-hour-git-scavenger-hunt> and see if you can free the Travelling Symphony.\n\n::: {.unilur-solution}\nSteps to complete the puzzle:\n\n1. `git switch the-severn-city`\n2. Open `index.html`.  \nRead `git log`  \nCreate a file called `main.scss` and commit it  \nRun `git show HEAD` and paste the contents into the webpage.\n3. `git switch bridge-of-death`\n4. `git tag -l v9 -n10` or just `git tag -l -n10` will do\n5. `git switch cherry-picking`\n6. `git switch cherry-tree`  \n7. `git cherry-pick c1b5778 80fad82 23c1589`  \nFix the merge conflicts at each step. Should be left with a message that says:  \n\"You are closer to the Severn City, Kirsten. To find the next clue, you must look in the branch 'severn-airport'\"\n8. `git switch severn-airport`\n9. Look in the `renv.lock` file\n10. List all branches using `git branch -a`. The three branches of interest are:  \n    * `first-r-binary-released`\n    * `first-rstudio-release`\n    * `first-r-ladies-meetup`\n11. Merge these in order, and you are left with some ASCII art that points you to <https://krisanata.github.io/personal-website/>.\n12. The hint here is the text  \n> I’m also helping organise the Hacky-Hour session, which is like a “getaway” for me.  \nSo you should go to <https://krisanata.github.io/personal-website/hacky-hour>\n12. base64 decode the string to find the name of the prophet. Google will give you an answer. The R code gives you number strings which you have to further decode:  \n```r\nrawToChar(base64enc::base64decode('VGhlIGFuc3dlciB0byBhbGwgb2YgdGhpcyBpcyAiRHIuIEVsZXZlbiI='))\n```\n\nThe final solution is \"Dr. Eleven\".\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}