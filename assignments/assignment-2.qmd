---
title: 'ETC5513: Collaborative and Reproducible Practices'
subtitle: "Assignment 2"
author: "Michael Lydeamore"
date: today
format:
    html:
        embed-resources: true
---


```{r setup}
#| include: false
#| eval: true
source("setup.R")
```

```{r}
#| echo: false

total_marks <- 0

add_marks <- function(amount) {
    total_marks <<- total_marks + amount

    amount
}

```

```{r, echo = FALSE, eval = file.exists("tutorial.css")}
htmltools::includeCSS("tutorial.css")
```


## `r emo::ji("target")` Objectives

* Work on a reproducible workbook
* Practice markdown syntax
* Demonstrate that you have a strong knowledge of git commands and usage

::: {.callout-important}
This is an **individual**  assignment.
:::

## The guide

Create a written guide which demonstrates your knowledge on `git`, GitHub, and the command line interface.

The guide should demonstrate your ability to use these tools efficiently for version control and collaboration. Make sure you explain what you are doing in each step and why.

Please make sure you include _all_ of the steps described below. 

__You only need to use commands we have learned in class.__

1. Create a new RStudio Project. In this folder, create a simple qmd file called `example.qmd` that can be knitted into a HTML file. Show the result of the knitted file.

2. From the command line interface, initialise this folder as a git repository and push it to a GitHub repository.

3. Create a new branch called `testbranch`. Modify the file `example.qmd` and add the changes to both the local and remote repositories. 

4. Create a folder called data, and add the data from Assignment 1 to that folder. Amend the previous commit to include the data folder. Push this amended commit to the remote.

5. Switch back to the main branch and modify `example.qmd` in a different way such that it will conflict with `testbranch`. Commit and push these changes.

6. Merge the changes in `testbranch` onto `main`. Show the conflict and fixing the merge conflict. Push the changes to GitHub, showing the status and changes in GitHub. 

7. Tag this commit v1.0 on `main` using an annotated tag.

8. Delete branch `testbranch` locally and on the remote.

9. Show the commit log in condensed form in the terminal. 

10. On main, create a new section in `example.qmd` that includes an easy to make plot. Commit the changes, and demonstrate using the command line interface how to undo the commit _without_ losing your local changes.

## Marking Rubric

**Please upload the completed PDF guide to Moodle for marking**

* Each of the instructions will be assessed as to whether they are successfully completed or not (2 marks each, total `r add_marks(20)` points)
* Clear commit messages used in the guide where appropriate (`r add_marks(1)` point)
* Guide has good flow and is clear (`r add_marks(2)` points)
* Issues with language and grammar: Maximum deduction of 3 points